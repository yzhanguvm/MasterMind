

/**
 * The MasterMind program simulates Master-mind game.
 * It allows the user to play against the computer.
 * The computer generates the correct answer and evaluates the guesses provided by the user
 * and gives hints and scores after each guess.
 *
 * @author Yucan Zhang
 * 
 */
 
/**
 * This class generates a set of colors randomly from either 6 or 7 author-defined colors
 */
public class MMAnswer 
{
	private char[] answer;
	private final int STANDARD_MODE = 6;
	private final int CHALLENGE_MODE = 7;
	
	/**
	 * Constructs a new MMAnswer object with the user-defined game mode passed from main game
	 * @param mode the difficulty level of the game
	 */
	public MMAnswer (int mode)
	{
		// Generate answer for standard mode: use six colors and four holes
		// Allows duplicate
		if ( mode == STANDARD_MODE )
		{
			// contain four holes
			answer = new char[4];
			
			// radomly select 4 colors from 6 colors
			int rand;
			
			// first color
	        rand = 1 + (int)(Math.random() * 6);
	        answer[0] = convert(rand);
	        
	        // second color
	        rand = 1 + (int)(Math.random() * 6);
	        answer[1] = convert(rand);
	        
	        // third color
	        rand = 1 + (int)(Math.random() * 6);
	        answer[2] = convert(rand);
	        
	        // fourth color
	        rand = 1 + (int)(Math.random() * 6);
	        answer[3] = convert(rand);
		}
		
		// Generates answer for challenge mode: use seven colors and five holes
		// Allows duplicate
		if ( mode == CHALLENGE_MODE )
		{
			// contain 5 holes
			answer = new char[5];
			
			// radomly select 5 colors from 7 colors
			int rand;
			
			// first color
	        rand = 1 + (int)(Math.random() * 7);
	        answer[0] = convert(rand);
	        
	        // second color
	        rand = 1 + (int)(Math.random() * 7);
	        answer[1] = convert(rand);
	        
	        // third color
	        rand = 1 + (int)(Math.random() * 7);
	        answer[2] = convert(rand);
	        
	        // fourth color
	        rand = 1 + (int)(Math.random() * 7);
	        answer[3] = convert(rand);
	        
	        // fifth color
	        rand = 1 + (int)(Math.random() * 7);
	        answer[4] = convert(rand);
	        
		}
	 
	}//MMAnswer(int mode)
	
	/**
	 * Converts the random integer into corresponding color represented by the first character
	 * @param answerIndex the position of the color in the answer
	 */
	private char convert(int answerIndex) 
	{
		switch ( answerIndex ) 
		{
			//red
			case 1 : return 'r';
			//orange
			case 2 : return 'o';
			//yellow
			case 3 : return 'y';
			//green
			case 4 : return 'g';
			//magenta
			case 5 : return 'b';
			//cyan
			case 6 : return 'i';
			//pink
			case 7 : return 'v';
		}

		return 'x';
	}//convert(int)
   
	/**
	 * Returns the answer generated by the computer
	 */
	public char[] getAnswer() 
	{
		return answer;
	}


   // tester of MMAnswer class
   public static void main (String args[]) {
	   MMAnswer standAns = new MMAnswer(6);
   	System.out.println(standAns.getAnswer());
   	
   	MMAnswer chanAns = new MMAnswer(7);
   	System.out.println(chanAns.getAnswer());
   }//tester
   
}//MMAnswer class

